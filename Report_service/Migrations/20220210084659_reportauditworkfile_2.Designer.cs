// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Report_service.DataAccess;

namespace Report_service.Migrations
{
    [DbContext(typeof(KitanoSqlContext))]
    [Migration("20220210084659_reportauditworkfile_2")]
    partial class reportauditworkfile_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("KitanoUserService.API.Models.MigrationsModels.Category.CatAuditRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deletedat");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modifiedat");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("CAT_AUDIT_REQUEST");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ApprovalConfig", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ApprovalLevel")
                        .HasColumnType("integer")
                        .HasColumnName("approval_level");

                    b.Property<bool?>("IsOutside")
                        .HasColumnType("boolean")
                        .HasColumnName("is_outside");

                    b.Property<bool?>("IsShow")
                        .HasColumnType("boolean")
                        .HasColumnName("is_show");

                    b.Property<string>("StatusCode")
                        .HasColumnType("text")
                        .HasColumnName("status_code");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("text")
                        .HasColumnName("status_description");

                    b.Property<string>("StatusName")
                        .HasColumnType("text")
                        .HasColumnName("status_name");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("item_code")
                        .HasColumnType("text")
                        .HasColumnName("item_code");

                    b.Property<int?>("item_id")
                        .HasColumnType("integer");

                    b.Property<string>("item_name")
                        .HasColumnType("text")
                        .HasColumnName("item_name");

                    b.HasKey("id");

                    b.ToTable("APPROVAL_CONFIG");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ApprovalFunction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("approval_date");

                    b.Property<string>("FileType")
                        .HasColumnType("text")
                        .HasColumnName("file_type");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<string>("Reason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<string>("StatusCode")
                        .HasColumnType("text")
                        .HasColumnName("status_code");

                    b.Property<string>("StatusName")
                        .HasColumnType("text")
                        .HasColumnName("status_name");

                    b.Property<int?>("approver")
                        .HasColumnType("integer");

                    b.Property<int?>("approver_last")
                        .HasColumnType("integer");

                    b.Property<string>("function_code")
                        .HasColumnType("text")
                        .HasColumnName("function_code");

                    b.Property<string>("function_name")
                        .HasColumnType("text")
                        .HasColumnName("function_name");

                    b.Property<int?>("item_id")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.HasKey("id");

                    b.HasIndex("approver");

                    b.HasIndex("approver_last");

                    b.ToTable("APPROVAL_FUNCTION_STATUS");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AssessmentResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AssessmentStatus")
                        .HasColumnType("integer");

                    b.Property<bool>("Audit")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("AuditDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("AuditReason")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DomainId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastAudit")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastRiskLevel")
                        .HasColumnType("text");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PassAuditReason")
                        .HasColumnType("text");

                    b.Property<int>("RiskLevel")
                        .HasColumnType("integer");

                    b.Property<int>("RiskLevelChange")
                        .HasColumnType("integer");

                    b.Property<string>("RiskLevelChangeName")
                        .HasColumnType("text");

                    b.Property<int>("ScoreBoardId")
                        .HasColumnType("integer");

                    b.Property<int>("StageStatus")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int?>("UserCreate")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("ASSESSMENT_RESULT");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.Audit.AuditStrategyRisk", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AuditWorkScopeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("audit_strategy")
                        .HasColumnType("text");

                    b.Property<int>("auditwork_scope_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("created_by")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("deleted_by")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<bool?>("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("modified_by")
                        .HasColumnType("integer");

                    b.Property<string>("name_risk")
                        .HasColumnType("text");

                    b.Property<int>("risk_level")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("AuditWorkScopeId");

                    b.HasIndex("auditwork_scope_id");

                    b.ToTable("AUDIT_STRATEGY_RISK");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_date");

                    b.Property<int?>("auditwork_id")
                        .HasColumnType("integer");

                    b.Property<string>("fullName")
                        .HasColumnType("text");

                    b.Property<int?>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("auditwork_id");

                    b.HasIndex("user_id");

                    b.ToTable("AUDIT_ASSIGNMENT");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditDetect", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("affect")
                        .HasColumnType("text")
                        .HasColumnName("affect");

                    b.Property<bool>("audit_report")
                        .HasColumnType("boolean")
                        .HasColumnName("audit_report");

                    b.Property<int?>("auditfacilities_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditfacilities_id");

                    b.Property<string>("auditfacilities_name")
                        .HasColumnType("text")
                        .HasColumnName("auditfacilities_name");

                    b.Property<int?>("auditprocess_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditprocess_id");

                    b.Property<string>("auditprocess_name")
                        .HasColumnType("text")
                        .HasColumnName("auditprocess_name");

                    b.Property<int?>("auditwork_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditwork_id");

                    b.Property<string>("auditwork_name")
                        .HasColumnType("text")
                        .HasColumnName("auditwork_name");

                    b.Property<string>("cause")
                        .HasColumnType("text")
                        .HasColumnName("cause");

                    b.Property<int?>("classify_audit_detect")
                        .HasColumnType("integer")
                        .HasColumnName("classify_audit_detect");

                    b.Property<string>("code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("evidence")
                        .HasColumnType("text")
                        .HasColumnName("evidence");

                    b.Property<int?>("followers")
                        .HasColumnType("integer")
                        .HasColumnName("followers");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("opinion_audit")
                        .HasColumnType("boolean")
                        .HasColumnName("opinion_audit");

                    b.Property<string>("path_audit_detect")
                        .HasColumnType("text")
                        .HasColumnName("path_audit_detect");

                    b.Property<int?>("rating_risk")
                        .HasColumnType("integer")
                        .HasColumnName("rating_risk");

                    b.Property<string>("reason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<string>("short_title")
                        .HasColumnType("text")
                        .HasColumnName("short_title");

                    b.Property<int?>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("summary_audit_detect")
                        .HasColumnType("text")
                        .HasColumnName("summary_audit_detect");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<int?>("year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("id");

                    b.HasIndex("auditfacilities_id");

                    b.HasIndex("auditprocess_id");

                    b.HasIndex("auditwork_id");

                    b.HasIndex("classify_audit_detect");

                    b.HasIndex("followers");

                    b.ToTable("AUDIT_DETECT");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("Code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("UserCreate");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<int?>("DomainId")
                        .HasColumnType("integer")
                        .HasColumnName("DomainId");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("ModifiedBy");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int?>("ObjectClassId")
                        .HasColumnType("integer")
                        .HasColumnName("ObjectClassId");

                    b.Property<string>("ObjectClassName")
                        .HasColumnType("text")
                        .HasColumnName("ObjectClassName");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("ParentId");

                    b.Property<string>("ParentName")
                        .HasColumnType("text")
                        .HasColumnName("ParentName");

                    b.HasKey("Id");

                    b.ToTable("AUDIT_FACILITY");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditObserve", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("audit_detect_id")
                        .HasColumnType("integer")
                        .HasColumnName("audit_detect_id");

                    b.Property<int?>("auditwork_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditwork_id");

                    b.Property<string>("auditwork_name")
                        .HasColumnType("text")
                        .HasColumnName("auditwork_name");

                    b.Property<string>("code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int>("discoverer")
                        .HasColumnType("integer")
                        .HasColumnName("discoverer");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("working_paper_code")
                        .HasColumnType("text")
                        .HasColumnName("working_paper_code");

                    b.Property<int?>("working_paper_id")
                        .HasColumnType("integer")
                        .HasColumnName("working_paper_id");

                    b.Property<int?>("year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("id");

                    b.HasIndex("audit_detect_id");

                    b.HasIndex("auditwork_id");

                    b.HasIndex("discoverer");

                    b.HasIndex("working_paper_id");

                    b.ToTable("AUDIT_OBSERVE");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("Browsedate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("browsedate");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Target")
                        .HasColumnType("text")
                        .HasColumnName("target");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("AUDIT_PLAN");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("integer")
                        .HasColumnName("ActivityId");

                    b.Property<string>("ActivityName")
                        .HasColumnType("text")
                        .HasColumnName("ActivityName");

                    b.Property<string>("Code")
                        .HasMaxLength(254)
                        .HasColumnType("character varying(254)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreateDate");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("Deleted");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<int>("DomainId")
                        .HasColumnType("integer")
                        .HasColumnName("DomainId");

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer")
                        .HasColumnName("FacilityId");

                    b.Property<string>("FacilityName")
                        .HasColumnType("text")
                        .HasColumnName("FacilityName");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastModified");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("ModifiedBy");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Name");

                    b.Property<string>("PersonCharge")
                        .HasColumnType("text")
                        .HasColumnName("PersonCharge");

                    b.Property<string>("PersonChargeEmail")
                        .HasColumnType("text")
                        .HasColumnName("PersonChargeEmail");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("Status");

                    b.Property<int?>("UserCreate")
                        .HasColumnType("integer")
                        .HasColumnName("UserCreate");

                    b.HasKey("Id");

                    b.ToTable("AUDIT_PROCESS");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int?>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.Property<int?>("auditfacilities_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditfacilities_id");

                    b.Property<string>("auditfacilities_name")
                        .HasColumnType("text")
                        .HasColumnName("auditfacilities_name");

                    b.Property<int?>("auditprocess_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditprocess_id");

                    b.Property<string>("auditprocess_name")
                        .HasColumnType("text")
                        .HasColumnName("auditprocess_name");

                    b.Property<int?>("auditwork_id")
                        .HasColumnType("integer");

                    b.Property<int?>("bussinessactivities_id")
                        .HasColumnType("integer")
                        .HasColumnName("bussinessactivities_id");

                    b.Property<string>("bussinessactivities_name")
                        .HasColumnType("text")
                        .HasColumnName("bussinessactivities_name");

                    b.HasKey("Id");

                    b.HasIndex("auditwork_id");

                    b.ToTable("AUDIT_PROGRAM");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditRequestMonitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("ActualCompleteAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("actual_complete_at");

                    b.Property<string>("Auditcomment")
                        .HasColumnType("text")
                        .HasColumnName("audit_comment");

                    b.Property<string>("Captaincomment")
                        .HasColumnType("text")
                        .HasColumnName("captain_comment");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CompleteAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("complete_at");

                    b.Property<int?>("Conclusion")
                        .HasColumnType("integer")
                        .HasColumnName("conclusion");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<int?>("CooperateUnitid")
                        .HasColumnType("integer")
                        .HasColumnName("co_operate_unit_id");

                    b.Property<string>("Evidence")
                        .HasColumnType("text")
                        .HasColumnName("evidence");

                    b.Property<string>("Leadercomment")
                        .HasColumnType("text")
                        .HasColumnName("leader_comment");

                    b.Property<int?>("ProcessStatus")
                        .HasColumnType("integer")
                        .HasColumnName("process_status");

                    b.Property<string>("Reason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<int?>("TimeStatus")
                        .HasColumnType("integer")
                        .HasColumnName("time_status");

                    b.Property<string>("Unitcomment")
                        .HasColumnType("text")
                        .HasColumnName("unit_comment");

                    b.Property<int?>("auditrequesttypeid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("created_by")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("deleted_by")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("detect_code_new")
                        .HasColumnType("text")
                        .HasColumnName("detect_code_new");

                    b.Property<int?>("detectid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("extend_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("extend_at");

                    b.Property<bool>("flag")
                        .HasColumnType("boolean")
                        .HasColumnName("flag");

                    b.Property<bool?>("is_active")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("modified_by")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<int?>("unitid")
                        .HasColumnType("integer");

                    b.Property<int?>("userid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("auditrequesttypeid");

                    b.HasIndex("detectid");

                    b.HasIndex("unitid");

                    b.HasIndex("userid");

                    b.ToTable("AUDIT_REQUEST_MONITOR");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AuditScopeOutside")
                        .HasColumnType("text")
                        .HasColumnName("audit_scope_outside");

                    b.Property<int?>("Classify")
                        .HasColumnType("integer")
                        .HasColumnName("classify");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_date");

                    b.Property<int?>("ExecutionStatus")
                        .HasColumnType("integer")
                        .HasColumnName("execution_status");

                    b.Property<DateTime?>("ExtensionTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("extension_time");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("NumOfAuditor")
                        .HasColumnType("integer")
                        .HasColumnName("num_of_auditor");

                    b.Property<double?>("NumOfWorkdays")
                        .HasColumnType("double precision")
                        .HasColumnName("num_of_workdays");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("release_date");

                    b.Property<string>("ReqOther")
                        .HasColumnType("text")
                        .HasColumnName("req_other");

                    b.Property<string>("ReqOutsourcing")
                        .HasColumnType("text")
                        .HasColumnName("req_outsourcing");

                    b.Property<string>("ReqSkillForAudit")
                        .HasColumnType("text")
                        .HasColumnName("req_skill_audit");

                    b.Property<int?>("ScaleOfAudit")
                        .HasColumnType("integer")
                        .HasColumnName("scale_of_audit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_date");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Target")
                        .HasColumnType("text")
                        .HasColumnName("target");

                    b.Property<string>("Year")
                        .HasColumnType("text")
                        .HasColumnName("year");

                    b.Property<int?>("auditplan_id")
                        .HasColumnType("integer");

                    b.Property<int?>("person_in_charge")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("auditplan_id");

                    b.HasIndex("person_in_charge");

                    b.ToTable("AUDIT_WORK");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWorkPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AuditScopeOutside")
                        .HasColumnType("text")
                        .HasColumnName("audit_scope_outside");

                    b.Property<int?>("Classify")
                        .HasColumnType("integer")
                        .HasColumnName("classify");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_date");

                    b.Property<int?>("ExecutionStatus")
                        .HasColumnType("integer")
                        .HasColumnName("execution_status");

                    b.Property<DateTime?>("ExtensionTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("extension_time");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("NumOfAuditor")
                        .HasColumnType("integer")
                        .HasColumnName("num_of_auditor");

                    b.Property<int?>("NumOfWorkdays")
                        .HasColumnType("integer")
                        .HasColumnName("num_of_workdays");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<string>("ReqOther")
                        .HasColumnType("text")
                        .HasColumnName("req_other");

                    b.Property<string>("ReqOutsourcing")
                        .HasColumnType("text")
                        .HasColumnName("req_outsourcing");

                    b.Property<string>("ReqSkillForAudit")
                        .HasColumnType("text")
                        .HasColumnName("req_skill_audit");

                    b.Property<int?>("ScaleOfAudit")
                        .HasColumnType("integer")
                        .HasColumnName("scale_of_audit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_date");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Target")
                        .HasColumnType("text")
                        .HasColumnName("target");

                    b.Property<string>("Year")
                        .HasColumnType("text")
                        .HasColumnName("year");

                    b.Property<int?>("auditplan_id")
                        .HasColumnType("integer");

                    b.Property<int?>("person_in_charge")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("auditplan_id");

                    b.HasIndex("person_in_charge");

                    b.ToTable("AUDIT_WORK_PLAN");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWorkScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AuditRatingLevelReport")
                        .HasColumnType("integer")
                        .HasColumnName("audit_rating_level_report");

                    b.Property<DateTime?>("AuditingTimeNearest")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("auditing_time_nearest");

                    b.Property<string>("BaseRatingReport")
                        .HasColumnType("text")
                        .HasColumnName("base_rating_report");

                    b.Property<int?>("BoardId")
                        .HasColumnType("integer")
                        .HasColumnName("score_board_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("ReasonNote")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<int?>("RiskRating")
                        .HasColumnType("integer")
                        .HasColumnName("risk_rating");

                    b.Property<int?>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.Property<int?>("auditfacilities_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditfacilities_id");

                    b.Property<string>("auditfacilities_name")
                        .HasColumnType("text")
                        .HasColumnName("auditfacilities_name");

                    b.Property<int?>("auditprocess_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditprocess_id");

                    b.Property<string>("auditprocess_name")
                        .HasColumnType("text")
                        .HasColumnName("auditprocess_name");

                    b.Property<int?>("auditwork_id")
                        .HasColumnType("integer");

                    b.Property<string>("brief_review")
                        .HasColumnType("text");

                    b.Property<int?>("bussinessactivities_id")
                        .HasColumnType("integer")
                        .HasColumnName("bussinessactivities_id");

                    b.Property<string>("bussinessactivities_name")
                        .HasColumnType("text")
                        .HasColumnName("bussinessactivities_name");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("auditwork_id");

                    b.ToTable("AUDIT_WORK_SCOPE");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWorkScopeFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AuditRatingLevelReport")
                        .HasColumnType("integer")
                        .HasColumnName("audit_rating_level_report");

                    b.Property<DateTime?>("AuditingTimeNearest")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("auditing_time_nearest");

                    b.Property<string>("BaseRatingReport")
                        .HasColumnType("text")
                        .HasColumnName("base_rating_report");

                    b.Property<int?>("BoardId")
                        .HasColumnType("integer")
                        .HasColumnName("score_board_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("FileType")
                        .HasColumnType("text")
                        .HasColumnName("file_type");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("ReasonNote")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<int?>("RiskRating")
                        .HasColumnType("integer")
                        .HasColumnName("risk_rating");

                    b.Property<string>("RiskRatingName")
                        .HasColumnType("text")
                        .HasColumnName("risk_rating_name");

                    b.Property<int?>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.Property<int?>("auditfacilities_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditfacilities_id");

                    b.Property<string>("auditfacilities_name")
                        .HasColumnType("text")
                        .HasColumnName("auditfacilities_name");

                    b.Property<int?>("auditwork_id")
                        .HasColumnType("integer");

                    b.Property<string>("brief_review")
                        .HasColumnType("text")
                        .HasColumnName("brief_review");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("auditwork_id");

                    b.ToTable("AUDIT_WORK_SCOPE_FACILITY");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWorkScopeUserMapping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("auditwork_scope_id")
                        .HasColumnType("integer");

                    b.Property<string>("full_name")
                        .HasColumnType("text");

                    b.Property<int>("type")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("auditwork_scope_id");

                    b.HasIndex("user_id");

                    b.ToTable("AUDIT_WORK_SCOPE_USER_MAPPING ");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.CatAuditProcedures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Activationid")
                        .HasColumnType("integer")
                        .HasColumnName("activationid");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Processid")
                        .HasColumnType("integer")
                        .HasColumnName("processid");

                    b.Property<string>("RelateStep")
                        .HasColumnType("text")
                        .HasColumnName("relatestep");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int?>("Unitid")
                        .HasColumnType("integer")
                        .HasColumnName("unitid");

                    b.Property<int?>("cat_control_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("cat_control_id");

                    b.ToTable("CAT_AUDIT_PROCEDURES");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.CatControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Activationid")
                        .HasColumnType("integer")
                        .HasColumnName("activationid");

                    b.Property<string>("ActualControl")
                        .HasColumnType("text")
                        .HasColumnName("actualcontrol");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int?>("Controlformat")
                        .HasColumnType("integer")
                        .HasColumnName("controlformat");

                    b.Property<int?>("Controlfrequency")
                        .HasColumnType("integer")
                        .HasColumnName("controlfrequency");

                    b.Property<int?>("Controltype")
                        .HasColumnType("integer")
                        .HasColumnName("controltype");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Processid")
                        .HasColumnType("integer")
                        .HasColumnName("processid");

                    b.Property<string>("RelateStep")
                        .HasColumnType("text")
                        .HasColumnName("relatestep");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int?>("Unitid")
                        .HasColumnType("integer")
                        .HasColumnName("unitid");

                    b.HasKey("Id");

                    b.ToTable("CAT_CONTROL");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.CatRisk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Activationid")
                        .HasColumnType("integer")
                        .HasColumnName("activationid");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Processid")
                        .HasColumnType("integer")
                        .HasColumnName("processid");

                    b.Property<string>("RelateStep")
                        .HasColumnType("text")
                        .HasColumnName("relatestep");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int?>("Unitid")
                        .HasColumnType("integer")
                        .HasColumnName("unitid");

                    b.HasKey("Id");

                    b.ToTable("CAT_RISK");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.CatRiskLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deletedat");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modifiedat");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("CAT_RISK_LEVEL");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.Category.CatDetectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdate");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deletedat");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedby");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modifiedat");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("CAT_DETECT_TYPE");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.FacilityRequestMonitorMapping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("audit_facility_id")
                        .HasColumnType("integer");

                    b.Property<string>("audit_facility_name")
                        .HasColumnType("text");

                    b.Property<int>("audit_request_monitor_id")
                        .HasColumnType("integer");

                    b.Property<string>("comment")
                        .HasColumnType("text");

                    b.Property<string>("process_status")
                        .HasColumnType("text");

                    b.Property<int>("type")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("audit_facility_id");

                    b.HasIndex("audit_request_monitor_id");

                    b.ToTable("FACILITY_REQUEST_MONITOR_MAPPING");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.MainStage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("actual_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("auditwork_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("created_by")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("expected_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("modified_by")
                        .HasColumnType("integer");

                    b.Property<string>("stage")
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("auditwork_id");

                    b.ToTable("MAINSTAGE");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ProcessLevelRiskScoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("AuditProposal")
                        .HasColumnType("boolean")
                        .HasColumnName("audit_proposal");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<int?>("Potential_InfulenceLevel")
                        .HasColumnType("integer")
                        .HasColumnName("potential_infulence_level");

                    b.Property<int?>("Potential_Possibility")
                        .HasColumnType("integer")
                        .HasColumnName("potential_possibility");

                    b.Property<string>("Potential_ReasonRating")
                        .HasColumnType("text")
                        .HasColumnName("potential_reason_rating");

                    b.Property<int?>("Potential_RiskRating")
                        .HasColumnType("integer")
                        .HasColumnName("potential_risk_rating");

                    b.Property<string>("Potential_RiskRating_Name")
                        .HasColumnType("text")
                        .HasColumnName("potential_risk_rating_name");

                    b.Property<int?>("Remaining_InfulenceLevel")
                        .HasColumnType("integer")
                        .HasColumnName("remaining_infulence_level");

                    b.Property<int?>("Remaining_Possibility")
                        .HasColumnType("integer")
                        .HasColumnName("remaining_possibility");

                    b.Property<string>("Remaining_ReasonRating")
                        .HasColumnType("text")
                        .HasColumnName("remaining_reason_rating");

                    b.Property<int?>("Remaining_RiskRating")
                        .HasColumnType("integer")
                        .HasColumnName("remaining_risk_rating");

                    b.Property<string>("Remaining_RiskRating_Name")
                        .HasColumnType("text")
                        .HasColumnName("remaining_risk_rating_name");

                    b.Property<int?>("auditprogram_id")
                        .HasColumnType("integer")
                        .HasColumnName("auditprogram_id");

                    b.Property<int?>("auditscope_id")
                        .HasColumnType("integer");

                    b.Property<int?>("catrisk_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("auditscope_id");

                    b.HasIndex("catrisk_id");

                    b.ToTable("PROCESS_LEVEL_RISK_SCORING");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ReportAuditWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("approval_date");

                    b.Property<int?>("AuditRatingLevelTotal")
                        .HasColumnType("integer")
                        .HasColumnName("audit_rating_level_total");

                    b.Property<string>("AuditWorkCode")
                        .HasColumnType("text")
                        .HasColumnName("auditwork_code");

                    b.Property<string>("AuditWorkName")
                        .HasColumnType("text")
                        .HasColumnName("auditwork_name");

                    b.Property<string>("BaseRatingTotal")
                        .HasColumnType("text")
                        .HasColumnName("base_rating_total");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_date");

                    b.Property<DateTime?>("EndDateField")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_date_field");

                    b.Property<string>("FileType")
                        .HasColumnType("text")
                        .HasColumnName("file_type");

                    b.Property<string>("GeneralConclusions")
                        .HasColumnType("text")
                        .HasColumnName("general_conclusions");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("NumOfWorkdays")
                        .HasColumnType("text")
                        .HasColumnName("num_of_workdays");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<string>("ReasonReject")
                        .HasColumnType("text")
                        .HasColumnName("reason_reject");

                    b.Property<DateTime?>("ReportDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("report_date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_date");

                    b.Property<DateTime?>("StartDateField")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_date_field");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Year")
                        .HasColumnType("text")
                        .HasColumnName("year");

                    b.Property<int?>("approval_user")
                        .HasColumnType("integer");

                    b.Property<int?>("auditwork_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("approval_user");

                    b.HasIndex("auditwork_id");

                    b.ToTable("REPORT_AUDIT_WORK");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ReportAuditWorkFile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("file_type")
                        .HasColumnType("text")
                        .HasColumnName("file_type");

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<string>("path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<int>("report_auditwork_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("report_auditwork_id");

                    b.ToTable("REPORT_AUDIT_WORK_FILE");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ReportAuditWorkYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("concerns")
                        .HasColumnType("text")
                        .HasColumnName("concerns");

                    b.Property<string>("evaluation")
                        .HasColumnType("text")
                        .HasColumnName("evaluation");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("overcome")
                        .HasColumnType("text")
                        .HasColumnName("overcome");

                    b.Property<string>("quality")
                        .HasColumnType("text")
                        .HasColumnName("quality");

                    b.Property<string>("reason")
                        .HasColumnType("text")
                        .HasColumnName("reason");

                    b.Property<int?>("year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("REPORT_AUDIT_WORK_YEAR");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.RiskControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("controlid")
                        .HasColumnType("integer");

                    b.Property<int>("riskid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("controlid");

                    b.HasIndex("riskid");

                    b.ToTable("RISK_CONTROL");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.RiskScoringProcedures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LstAuditor")
                        .HasColumnType("text")
                        .HasColumnName("lst_auditor");

                    b.Property<int?>("catprocedures_id")
                        .HasColumnType("integer");

                    b.Property<int?>("risk_scoring_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("catprocedures_id");

                    b.HasIndex("risk_scoring_id");

                    b.ToTable("RISK_SCORING_PROCEDURES");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("ROLES");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.Schedule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("actual_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("auditwork_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("created_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("deleted_by")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("expected_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("modified_by")
                        .HasColumnType("integer");

                    b.Property<int?>("user_id")
                        .HasColumnType("integer");

                    b.Property<string>("user_name")
                        .HasColumnType("text");

                    b.Property<string>("work")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("auditwork_id");

                    b.HasIndex("user_id");

                    b.ToTable("SCHEDULE");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ScoreBoard", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ApplyFor")
                        .HasColumnType("text");

                    b.Property<int>("AssessmentStageId")
                        .HasColumnType("integer");

                    b.Property<string>("AttachFile")
                        .HasColumnType("text");

                    b.Property<string>("AttachName")
                        .HasColumnType("text");

                    b.Property<string>("AuditCycleName")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Customer")
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DomainId")
                        .HasColumnType("integer");

                    b.Property<string>("ITSystem")
                        .HasColumnType("text");

                    b.Property<string>("InternalRegulations")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LawRegulations")
                        .HasColumnType("text");

                    b.Property<string>("MainProcess")
                        .HasColumnType("text");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ObjectCode")
                        .HasColumnType("text");

                    b.Property<int>("ObjectId")
                        .HasColumnType("integer");

                    b.Property<string>("ObjectName")
                        .HasColumnType("text");

                    b.Property<string>("Outsourcing")
                        .HasColumnType("text");

                    b.Property<double?>("Point")
                        .HasColumnType("double precision");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<int?>("RatingScaleId")
                        .HasColumnType("integer");

                    b.Property<string>("RiskLevel")
                        .HasColumnType("text");

                    b.Property<int>("Stage")
                        .HasColumnType("integer");

                    b.Property<int?>("StageValue")
                        .HasColumnType("integer");

                    b.Property<string>("StateInfo")
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Supplier")
                        .HasColumnType("text");

                    b.Property<string>("Target")
                        .HasColumnType("text");

                    b.Property<int?>("UserCreate")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("SCORE_BOARD");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.SystemParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Default_Note")
                        .HasColumnType("text")
                        .HasColumnName("default_note");

                    b.Property<string>("Default_Value")
                        .HasColumnType("text")
                        .HasColumnName("default_value");

                    b.Property<DateTime?>("Modified_At")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("Modified_By")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("Parameter_Name")
                        .HasColumnType("text")
                        .HasColumnName("parameter_name");

                    b.Property<DateTime?>("Reset_At")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("reset_at");

                    b.Property<string>("Sub_System")
                        .HasColumnType("text")
                        .HasColumnName("sub_system");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("SYSTEM_PARAMETER");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UnitComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("auditequestid")
                        .HasColumnType("integer")
                        .HasColumnName("auditequestid");

                    b.Property<string>("comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<int?>("counitid")
                        .HasColumnType("integer")
                        .HasColumnName("counitid");

                    b.Property<int?>("processstatus")
                        .HasColumnType("integer")
                        .HasColumnName("processstatus");

                    b.HasKey("Id");

                    b.HasIndex("auditequestid");

                    b.HasIndex("counitid");

                    b.ToTable("UNIT_COMMENT");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdAt");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("createdBy");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deletedAt");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deletedBy");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modifiedAt");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modifiedBy");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("UNIT_TYPE");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Avartar")
                        .HasColumnType("text")
                        .HasColumnName("avartar");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_of_joining");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer")
                        .HasColumnName("department_id");

                    b.Property<int?>("DomainId")
                        .HasColumnType("integer")
                        .HasColumnName("domain_Id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("LastOnline")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_online_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<string>("SaltKey")
                        .HasColumnType("text")
                        .HasColumnName("salt");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.Property<int?>("UsersType")
                        .HasColumnType("integer")
                        .HasColumnName("users_type");

                    b.HasKey("Id");

                    b.ToTable("USERS");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UsersGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("USERS_GROUP");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UsersGroupMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("group_id")
                        .HasColumnType("integer");

                    b.Property<int?>("users_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("group_id");

                    b.HasIndex("users_id");

                    b.ToTable("USERS_GROUP_MAPPING");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UsersGroupRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("group_id")
                        .HasColumnType("integer");

                    b.Property<int?>("roles_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("group_id");

                    b.HasIndex("roles_id");

                    b.ToTable("USERS_GROUP_ROLES");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UsersRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("roles_id")
                        .HasColumnType("integer");

                    b.Property<int?>("users_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("roles_id");

                    b.HasIndex("users_id");

                    b.ToTable("USERS_ROLES");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UsersWorkHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DateOfJoining")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_of_joining");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("integer")
                        .HasColumnName("department_id");

                    b.Property<int?>("users_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("users_id");

                    b.ToTable("USERS_WORK_HISTORY");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.WorkingPaper", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("approvedate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("approvedate");

                    b.Property<int?>("asigneeid")
                        .HasColumnType("integer")
                        .HasColumnName("asigneeid");

                    b.Property<int?>("auditworkid")
                        .HasColumnType("integer")
                        .HasColumnName("auditworkid");

                    b.Property<string>("code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("conclusion")
                        .HasColumnType("text")
                        .HasColumnName("conclusion");

                    b.Property<bool?>("isdelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<int?>("processid")
                        .HasColumnType("integer")
                        .HasColumnName("processid");

                    b.Property<string>("prototype")
                        .HasColumnType("text")
                        .HasColumnName("prototype");

                    b.Property<int?>("reviewerid")
                        .HasColumnType("integer")
                        .HasColumnName("reviewerid");

                    b.Property<int?>("riskid")
                        .HasColumnType("integer")
                        .HasColumnName("riskid");

                    b.Property<int?>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("target")
                        .HasColumnType("text")
                        .HasColumnName("target");

                    b.Property<int?>("unitid")
                        .HasColumnType("integer")
                        .HasColumnName("unitid");

                    b.Property<int?>("year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("id");

                    b.ToTable("WORKING_PAPER");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ApprovalFunction", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("approver");

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users_Last")
                        .WithMany()
                        .HasForeignKey("approver_last");

                    b.Navigation("Users");

                    b.Navigation("Users_Last");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.Audit.AuditStrategyRisk", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditWorkScope", null)
                        .WithMany("AuditStrategyRisk")
                        .HasForeignKey("AuditWorkScopeId");

                    b.HasOne("Report_service.Models.MigrationsModels.AuditWorkScopeFacility", "AuditWorkScopeFacility")
                        .WithMany()
                        .HasForeignKey("auditwork_scope_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditWorkScopeFacility");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditAssignment", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditWork", "AuditWork")
                        .WithMany("AuditAssignment")
                        .HasForeignKey("auditwork_id");

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.Navigation("AuditWork");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditDetect", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditFacility", "AuditFacility")
                        .WithMany()
                        .HasForeignKey("auditfacilities_id");

                    b.HasOne("Report_service.Models.MigrationsModels.AuditProcess", "AuditProcess")
                        .WithMany()
                        .HasForeignKey("auditprocess_id");

                    b.HasOne("Report_service.Models.MigrationsModels.AuditWork", "AuditWork")
                        .WithMany("AuditDetect")
                        .HasForeignKey("auditwork_id");

                    b.HasOne("Report_service.Models.MigrationsModels.Category.CatDetectType", "CatDetectType")
                        .WithMany()
                        .HasForeignKey("classify_audit_detect");

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("followers");

                    b.Navigation("AuditFacility");

                    b.Navigation("AuditProcess");

                    b.Navigation("AuditWork");

                    b.Navigation("CatDetectType");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditObserve", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditDetect", "AuditDetect")
                        .WithMany("AuditObserve")
                        .HasForeignKey("audit_detect_id");

                    b.HasOne("Report_service.Models.MigrationsModels.AuditWork", "AuditWork")
                        .WithMany()
                        .HasForeignKey("auditwork_id");

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("discoverer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Report_service.Models.MigrationsModels.WorkingPaper", "WorkingPaper")
                        .WithMany("AuditObserve")
                        .HasForeignKey("working_paper_id");

                    b.Navigation("AuditDetect");

                    b.Navigation("AuditWork");

                    b.Navigation("Users");

                    b.Navigation("WorkingPaper");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditProgram", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditWork", "AuditWork")
                        .WithMany()
                        .HasForeignKey("auditwork_id");

                    b.Navigation("AuditWork");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditRequestMonitor", b =>
                {
                    b.HasOne("KitanoUserService.API.Models.MigrationsModels.Category.CatAuditRequest", "CatAuditRequest")
                        .WithMany()
                        .HasForeignKey("auditrequesttypeid");

                    b.HasOne("Report_service.Models.MigrationsModels.AuditDetect", "AuditDetect")
                        .WithMany("AuditRequestMonitor")
                        .HasForeignKey("detectid");

                    b.HasOne("Report_service.Models.MigrationsModels.AuditFacility", "AuditFacility")
                        .WithMany()
                        .HasForeignKey("unitid");

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("userid");

                    b.Navigation("AuditDetect");

                    b.Navigation("AuditFacility");

                    b.Navigation("CatAuditRequest");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWork", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditPlan", "AuditPlan")
                        .WithMany("AuditWork")
                        .HasForeignKey("auditplan_id");

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("person_in_charge");

                    b.Navigation("AuditPlan");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWorkPlan", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditPlan", "AuditPlan")
                        .WithMany()
                        .HasForeignKey("auditplan_id");

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("person_in_charge");

                    b.Navigation("AuditPlan");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWorkScope", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditWork", "AuditWork")
                        .WithMany("AuditWorkScope")
                        .HasForeignKey("auditwork_id");

                    b.Navigation("AuditWork");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWorkScopeFacility", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditWork", "AuditWork")
                        .WithMany()
                        .HasForeignKey("auditwork_id");

                    b.Navigation("AuditWork");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWorkScopeUserMapping", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditWorkScope", "AuditWorkScope")
                        .WithMany("AuditWorkScopeUserMapping")
                        .HasForeignKey("auditwork_scope_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany("AuditWorkScopeUserMapping")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditWorkScope");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.CatAuditProcedures", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.CatControl", "CatControl")
                        .WithMany()
                        .HasForeignKey("cat_control_id");

                    b.Navigation("CatControl");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.FacilityRequestMonitorMapping", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditFacility", "AuditFacility")
                        .WithMany()
                        .HasForeignKey("audit_facility_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Report_service.Models.MigrationsModels.AuditRequestMonitor", "AuditRequestMonitor")
                        .WithMany("FacilityRequestMonitorMapping")
                        .HasForeignKey("audit_request_monitor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditFacility");

                    b.Navigation("AuditRequestMonitor");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.MainStage", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditWork", "AuditWork")
                        .WithMany("MainStage")
                        .HasForeignKey("auditwork_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditWork");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ProcessLevelRiskScoring", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditWorkScope", "AuditWorkScope")
                        .WithMany()
                        .HasForeignKey("auditscope_id");

                    b.HasOne("Report_service.Models.MigrationsModels.CatRisk", "CatRisk")
                        .WithMany()
                        .HasForeignKey("catrisk_id");

                    b.Navigation("AuditWorkScope");

                    b.Navigation("CatRisk");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ReportAuditWork", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("approval_user");

                    b.HasOne("Report_service.Models.MigrationsModels.AuditWork", "AuditWork")
                        .WithMany()
                        .HasForeignKey("auditwork_id");

                    b.Navigation("AuditWork");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.ReportAuditWorkFile", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.ReportAuditWork", "ReportAuditWork")
                        .WithMany()
                        .HasForeignKey("report_auditwork_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportAuditWork");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.RiskControl", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.CatControl", "CatControl")
                        .WithMany()
                        .HasForeignKey("controlid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Report_service.Models.MigrationsModels.CatRisk", "CatRisk")
                        .WithMany()
                        .HasForeignKey("riskid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatControl");

                    b.Navigation("CatRisk");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.RiskScoringProcedures", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.CatAuditProcedures", "CatAuditProcedures")
                        .WithMany()
                        .HasForeignKey("catprocedures_id");

                    b.HasOne("Report_service.Models.MigrationsModels.ProcessLevelRiskScoring", "ProcessLevelRiskScoring")
                        .WithMany()
                        .HasForeignKey("risk_scoring_id");

                    b.Navigation("CatAuditProcedures");

                    b.Navigation("ProcessLevelRiskScoring");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.Schedule", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditWork", "AuditWork")
                        .WithMany()
                        .HasForeignKey("auditwork_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.Navigation("AuditWork");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UnitComment", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.AuditRequestMonitor", "AuditRequestMonitor")
                        .WithMany()
                        .HasForeignKey("auditequestid");

                    b.HasOne("Report_service.Models.MigrationsModels.AuditFacility", "AuditFacility")
                        .WithMany()
                        .HasForeignKey("counitid");

                    b.Navigation("AuditFacility");

                    b.Navigation("AuditRequestMonitor");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UsersGroupMapping", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.UsersGroup", "UsersGroup")
                        .WithMany("UsersGroupMappings")
                        .HasForeignKey("group_id");

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany("UsersGroupMappings")
                        .HasForeignKey("users_id");

                    b.Navigation("Users");

                    b.Navigation("UsersGroup");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UsersGroupRoles", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.UsersGroup", "UsersGroup")
                        .WithMany("UsersGroupRoles")
                        .HasForeignKey("group_id");

                    b.HasOne("Report_service.Models.MigrationsModels.Roles", "Roles")
                        .WithMany("UsersGroupRoles")
                        .HasForeignKey("roles_id");

                    b.Navigation("Roles");

                    b.Navigation("UsersGroup");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UsersRoles", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.Roles", "Roles")
                        .WithMany("UsersRoles")
                        .HasForeignKey("roles_id");

                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany("UsersRoles")
                        .HasForeignKey("users_id");

                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UsersWorkHistory", b =>
                {
                    b.HasOne("Report_service.Models.MigrationsModels.Users", "Users")
                        .WithMany()
                        .HasForeignKey("users_id");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditDetect", b =>
                {
                    b.Navigation("AuditObserve");

                    b.Navigation("AuditRequestMonitor");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditPlan", b =>
                {
                    b.Navigation("AuditWork");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditRequestMonitor", b =>
                {
                    b.Navigation("FacilityRequestMonitorMapping");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWork", b =>
                {
                    b.Navigation("AuditAssignment");

                    b.Navigation("AuditDetect");

                    b.Navigation("AuditWorkScope");

                    b.Navigation("MainStage");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.AuditWorkScope", b =>
                {
                    b.Navigation("AuditStrategyRisk");

                    b.Navigation("AuditWorkScopeUserMapping");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.Roles", b =>
                {
                    b.Navigation("UsersGroupRoles");

                    b.Navigation("UsersRoles");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.Users", b =>
                {
                    b.Navigation("AuditWorkScopeUserMapping");

                    b.Navigation("UsersGroupMappings");

                    b.Navigation("UsersRoles");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.UsersGroup", b =>
                {
                    b.Navigation("UsersGroupMappings");

                    b.Navigation("UsersGroupRoles");
                });

            modelBuilder.Entity("Report_service.Models.MigrationsModels.WorkingPaper", b =>
                {
                    b.Navigation("AuditObserve");
                });
#pragma warning restore 612, 618
        }
    }
}
